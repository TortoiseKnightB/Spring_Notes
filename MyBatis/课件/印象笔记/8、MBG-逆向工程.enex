<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export2.dtd">
<en-export export-date="20220516T160303Z" application="Evernote/Windows" version="6.x">
<note><title>8、MBG-逆向工程</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd"><en-note><div>正向：</div><div>table----javaBean---BookDao---dao.xml---xxx</div><div>逆向工程：</div><div>根据数据表table，逆向分析数据表，自动生成javaBean---BookDao---dao.xml---xxx</div><div><hr/></div><div><br/></div><div>MBG：MyBatis Generator：代码生成器；</div><div>MyBatis官方提供的代码生成器；帮我们逆向生成；</div><div><br/></div><div><hr/></div><div>1、导包：mbg的核心包</div><div>2、编写mbg.xml配置文件</div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div>&lt;!DOCTYPE generatorConfiguration</div><div>&nbsp; PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</div><div>&nbsp; &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</div><div><br/></div><div>&lt;generatorConfiguration&gt;</div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</div><div>&nbsp;&nbsp;&nbsp;&nbsp;MyBatis3Simple：基础班CRUD</div><div>&nbsp;&nbsp;&nbsp;&nbsp;MyBatis3：复杂版CRUD</div><div>&nbsp;&nbsp;&nbsp;&nbsp; --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;context id=&quot;DB2Tables&quot; targetRuntime=&quot;MyBatis3&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;commentGenerator&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/commentGenerator&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- jdbcConnection:指导连接到哪个数据库 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;jdbcConnection<br/></div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;driverClass=&quot;com.mysql.jdbc.Driver&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;connectionURL=&quot;jdbc:mysql://localhost:3306/mybatis_0325&quot;<br/></div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;userId=&quot;root&quot;<br/></div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;password=&quot;123456&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/jdbcConnection&gt;</div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;javaTypeResolver&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot; /&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/javaTypeResolver&gt;</div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- javaModelGenerator：生成pojo<br/></div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;targetPackage：生成的pojo放在哪个包</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;targetProject：放在哪个工程下</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;javaModelGenerator targetPackage=&quot;com.atguigu.bean&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;targetProject=&quot;.\src&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;trimStrings&quot; value=&quot;true&quot; /&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/javaModelGenerator&gt;</div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--sqlMapGenerator：sql映射文件生成器；指定xml生成的地方&nbsp; --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;sqlMapGenerator targetPackage=&quot;com.atguigu.dao&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;targetProject=&quot;.\conf&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/sqlMapGenerator&gt;</div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- javaClientGenerator：dao接口生成的地方 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;javaClientGenerator type=&quot;XMLMAPPER&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;targetPackage=&quot;com.atguigu.dao&quot;<br/></div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;targetProject=&quot;.\src&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/javaClientGenerator&gt;</div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- table：指定要逆向生成哪个数据表</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tableName=&quot;t_cat&quot;：表名</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;domainObjectName=&quot;&quot;：这个表对应的对象名</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;table tableName=&quot;t_cat&quot; domainObjectName=&quot;Cat&quot;&gt;&lt;/table&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;table tableName=&quot;t_employee&quot; domainObjectName=&quot;Employee&quot;&gt;&lt;/table&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;table tableName=&quot;t_teacher&quot; domainObjectName=&quot;Teacher&quot;&gt;&lt;/table&gt;</div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/context&gt;</div><div>&lt;/generatorConfiguration&gt;</div></div><div><br/></div><div>3、运行代码生成</div><div><br/></div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>package com.atguigu.test;</div><div><br/></div><div>import java.io.File;</div><div>import java.io.IOException;</div><div>import java.util.ArrayList;</div><div>import java.util.List;</div><div><br/></div><div>import org.mybatis.generator.api.MyBatisGenerator;</div><div>import org.mybatis.generator.config.Configuration;</div><div>import org.mybatis.generator.config.xml.ConfigurationParser;</div><div>import org.mybatis.generator.exception.XMLParserException;</div><div>import org.mybatis.generator.internal.DefaultShellCallback;</div><div><br/></div><div>public class MBGTest {</div><div><br/></div><div>&nbsp; &nbsp; public static void main(String[] args) throws Exception {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; List&lt;String&gt; warnings = new ArrayList&lt;String&gt;();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; boolean overwrite = true;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; File configFile = new File(&quot;mbg.xml&quot;);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; ConfigurationParser cp = new ConfigurationParser(warnings);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; Configuration config = cp.parseConfiguration(configFile);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; DefaultShellCallback callback = new DefaultShellCallback(overwrite);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; callback, warnings);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; //代码生成</div><div>&nbsp; &nbsp; &nbsp; &nbsp; myBatisGenerator.generate(null);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(&quot;生成ok了！&quot;);</div><div>&nbsp; &nbsp; }</div><div><br/></div><div>}</div><div><br/></div></div><div><br/></div><div>4、测试复杂查询</div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>package com.atguigu.test;</div><div><br/></div><div>import static org.junit.Assert.*;</div><div><br/></div><div>import java.io.IOException;</div><div>import java.io.InputStream;</div><div>import java.util.ArrayList;</div><div>import java.util.Arrays;</div><div>import java.util.Date;</div><div>import java.util.HashMap;</div><div>import java.util.List;</div><div>import java.util.Map;</div><div>import java.util.UUID;</div><div><br/></div><div>import org.apache.ibatis.io.Resources;</div><div>import org.apache.ibatis.session.SqlSession;</div><div>import org.apache.ibatis.session.SqlSessionFactory;</div><div>import org.apache.ibatis.session.SqlSessionFactoryBuilder;</div><div>import org.junit.Before;</div><div>import org.junit.Test;</div><div><br/></div><div>import com.atguigu.bean.Teacher;</div><div>import com.atguigu.bean.TeacherExample;</div><div>import com.atguigu.bean.TeacherExample.Criteria;</div><div>import com.atguigu.dao.TeacherMapper;</div><div><br/></div><div><br/></div><div><br/></div><div>public class MyBatisTest {</div><div><br/></div><div>&nbsp; &nbsp; // 工厂一个</div><div>&nbsp; &nbsp; SqlSessionFactory sqlSessionFactory;</div><div><br/></div><div><br/></div><div>&nbsp; &nbsp; @Test</div><div>&nbsp; &nbsp; public void test02(){</div><div>&nbsp; &nbsp; &nbsp; &nbsp; SqlSession sqlSession = sqlSessionFactory.openSession();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; //1、测试</div><div>&nbsp; &nbsp; &nbsp; &nbsp; TeacherMapper mapper = sqlSession.getMapper(TeacherMapper.class);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; List&lt;Teacher&gt; teachers = new ArrayList&lt;Teacher&gt;();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; for (int i = 0; i &lt; 1000; i++) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Teacher teacher = new Teacher();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; teacher.setTeachername(UUID.randomUUID().toString().substring(0, 5));</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; teacher.setClassName(UUID.randomUUID().toString().substring(0, 5));</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; teachers.add(teacher);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(&quot;批量保存.....&quot;);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; mapper.insertBatch(teachers);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; sqlSession.commit();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; sqlSession.close();</div><div><br/></div><div><br/></div><div>&nbsp; &nbsp; }</div><div><br/></div><div>&nbsp; &nbsp; /**</div><div>&nbsp; &nbsp; &nbsp;* 测试代码生成器</div><div>&nbsp; &nbsp; &nbsp;* @throws IOException</div><div>&nbsp; &nbsp; &nbsp;*/</div><div>&nbsp; &nbsp; @Test</div><div>&nbsp; &nbsp; public void test01(){</div><div>&nbsp; &nbsp; &nbsp; &nbsp; SqlSession sqlSession = sqlSessionFactory.openSession();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; //1、测试</div><div>&nbsp; &nbsp; &nbsp; &nbsp; TeacherMapper mapper = sqlSession.getMapper(TeacherMapper.class);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; //2、测试查询所有teacher</div><div>&nbsp; &nbsp; &nbsp; &nbsp; List&lt;Teacher&gt; list = mapper.selectByExample(null);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; for (Teacher teacher : list) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(teacher);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br/></div><div>&nbsp; &nbsp; &nbsp; &nbsp; //3、带复杂条件的查询</div><div>&nbsp; &nbsp; &nbsp; &nbsp; //select * from t_teacher id=? and teacherName like ?</div><div>&nbsp; &nbsp; &nbsp; &nbsp; //封装查询条件的</div><div>&nbsp; &nbsp; &nbsp; &nbsp; TeacherExample example = new TeacherExample();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; example.setOrderByClause(&quot;id DESC&quot;);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; //1、使用example创建一个Criteria（查询准则）</div><div>&nbsp; &nbsp; &nbsp; &nbsp; Criteria criteria = example.createCriteria();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; criteria.andIdEqualTo(1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; criteria.andTeachernameLike(&quot;%a%&quot;);</div><div><br/></div><div>&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(&quot;======================&quot;);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; List&lt;Teacher&gt; list2 = mapper.selectByExample(example);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; for (Teacher teacher : list2) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(teacher);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br/></div><div>&nbsp; &nbsp; &nbsp; &nbsp; /**</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* 多个复杂条件</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* select * from t_teacher where&nbsp; (id=? and teacherName like ?) or (address like ? and birth bet)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</div><div>&nbsp; &nbsp; &nbsp; &nbsp; TeacherExample example2 = new TeacherExample();</div><div><br/></div><div><br/></div><div>&nbsp; &nbsp; &nbsp; &nbsp; //一个Criteria能封装一整个条件</div><div>&nbsp; &nbsp; &nbsp; &nbsp; Criteria criteria2 = example2.createCriteria();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; criteria2.andIdGreaterThan(1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; criteria2.andTeachernameLike(&quot;%a%&quot;);</div><div><br/></div><div>&nbsp; &nbsp; &nbsp; &nbsp; //创建第二个查询条件</div><div>&nbsp; &nbsp; &nbsp; &nbsp; Criteria criteria3 = example2.createCriteria();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; criteria3.andAddressLike(&quot;%%&quot;);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; criteria3.andBirthDateBetween(new Date(), new Date());</div><div><br/></div><div>&nbsp; &nbsp; &nbsp; &nbsp; example2.or(criteria3);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(&quot;=======-=-=-=-=-=-=-&quot;);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; mapper.selectByExample(example2);</div><div><br/></div><div>&nbsp; &nbsp; }</div><div><br/></div><div>&nbsp; &nbsp; @Before</div><div>&nbsp; &nbsp; public void initSqlSessionFactory() throws IOException {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; String resource = &quot;mybatis-config.xml&quot;;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; InputStream inputStream = Resources.getResourceAsStream(resource);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);</div><div>&nbsp; &nbsp; }</div><div><br/></div><div>}</div><div><br/></div></div><div><br/></div></en-note>]]></content><created>20220404T092633Z</created><note-attributes><author>雷丰阳</author><source>desktop.win</source><source-application>evernote.win32</source-application></note-attributes></note></en-export>
